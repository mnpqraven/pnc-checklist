@document.meta
title: README
description: Insert description here
authors: Othi
categories: README
created: 2023-01-18
updated: 2023-02-04
version: 0.1.2
@end

* TODO
** Frontend
*** Features
*** Current
    - (x) use backend's `Display` for algo selection options
    - (-) doll select layout improvement
    --- (x) add and delete on the same row, replace text with text above + icon
        below
    --- ( ) delete button to the side of each doll entry
    --- ( ) option to filter class
    - ( ) spacing on skill level sliders
    - (-) refactor old `interfaces` types (errors and results)
    - (=) validation return on frontend home
    - (-) implement React Query
    --- (-) create custom hook
    #bugs
    #UXUI
    - (-) Doll page:
    --- (-) Loadout: wrench icon top right, slides out for more options: select
        all/none algo, set skill/level/frags to max/min. probably a good spot
        to put loadout name (current/goal) on top
    --- (-) AlgoPiece: click on icon to open up image selection div, combobox
        is too tiring to read
    --- (-) probably the same with main stat
    --- (-) select all button in loadout
    - (=) layout when there's no algo piece is weird
    #refactors
    - (-) replace existing `useEffect` calls only for fetching `invoke`
        data
    --- current progress on refactoring:
    --- (x) `Dashboard`
    --- (-) `Algorithm`
    --- (-) `Doll` components (mutations)
    --- (x) `Requirement`
    --- (x) `Summary`
    --- (-) `pages`

    - (-) SOLID principle ![(link)](https://github.com/ipenywis/react-solid)

**  Ideas
    - ( )  actual logging to frontend
    - ( )  rsc page inventory for frontend
    - ( )  relative search ? TBD
** Backend
*** Changelog
*** Features
*** Current
    #implementing
    - (?) Parse DB for needed algo pieces

    #general
    - ( ) error handle
    -- ( ) requirement
    -- ( ) compute

    #refactor
    - (-) `computed`
    --- (-) move unit from json struct to computed struct
    ---- (x) validate with old code
    ----- (x) adding units
    ----- (x) saving units
    ----- (x) removing units
    ----- (x) other fns
    ---- ( ) re-test
    ---- (x) point algos to correct memory stack in `append_unit` and
         `Keychain::new()`
    ----- (x) `AlgoPiece` inside `Locker` will always be cloned, remember to
          keep track of the new cloned value for `Arc`.
    ---- (x) restabilize requirement fns
    ---- (-) refactor new `Arc<Mutex<T>>` generating functions to make it
         easier to read.
    - (x) inverting bools in `AlgoRequirment` feels unintuitive, maybe flip
      value

    #maintenance
    - (-) refactors
    -- (x) model: structs that manage other structs (Storage, Unit,
       Requirements, etc.) should be in their own modules
    -- ( ) check for zombie code esp. in the algorithm/requirement section
    -- (!) clear out old validate code in unit + algorithm

    - (-) documentation
    -- (-) functions

****    ideas
        - (x) think more in pipes ? try to keep upcoming refactors with that in
          mind

        - (=) how should we keep track of good algos that are being hoarded ?
        -- (?) inventory state to keep track of all added algo pieces that has been
           added to current ?
        - any piece added to current will be added to inventory
        - deletion window will have 'to inventory' option
        - unequips gerenally defaults to inventory move
        - (?) inventory will be later compared with requirement struct

        - (x) should `UnitRequirement` or `Compute` has its own field of
          requirement for algo
        -- (x) We'll be using `AlgoRequirment` in `UnitRequirement`
