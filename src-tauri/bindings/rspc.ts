// This file was generated by [rspc](https://github.com/oscartbeaumont/rspc). Do not edit this file manually.

export type Procedures = {
    queries: 
        { key: "algoPieces.get", input: never, result: Array<AlgoPiece> } | 
        { key: "algoPieces.getByLoadoutIds", input: Array<string>, result: Array<AlgoPiece> } | 
        { key: "displayAlgoMainstat", input: never, result: Array<AlgoMainStat> } | 
        { key: "enum.pretty.Algorithm", input: never, result: Array<Algorithm> } | 
        { key: "enum.pretty.Algorithm.toRaw", input: string, result: string } | 
        { key: "enum.pretty.LoadoutType", input: never, result: Array<LoadoutType> } | 
        { key: "enum.pretty.LoadoutType.raw", input: string, result: string } | 
        { key: "enum.rust.Algorithm", input: never, result: Array<string> } | 
        { key: "enum.rust.LoadoutType", input: never, result: Array<string> } | 
        { key: "listAlgoMainstat", input: Array<AlgoMainStat> | null, result: Array<string> } | 
        { key: "loadout.getByUnitId", input: string | null, result: Array<Loadout> } | 
        { key: "loadouts.get", input: never, result: Array<Loadout> } | 
        { key: "loadouts.getById", input: string, result: Array<Loadout> } | 
        { key: "slots.get", input: never, result: Array<Slot> } | 
        { key: "slots.getByAlgoPieceIds", input: Array<string> | null, result: Array<Slot> } | 
        { key: "unit.getById", input: string, result: Unit } | 
        { key: "unitSkills.get", input: never, result: Array<UnitSkill> } | 
        { key: "unitSkills.getByUnitIds", input: Array<string>, result: Array<UnitSkill> } | 
        { key: "units.get", input: never, result: Array<Unit> } | 
        { key: "version", input: never, result: string },
    mutations: 
        { key: "algoPiece.deleteById", input: string, result: AlgoPiece } | 
        { key: "algoPiece.new", input: [string | null, AlgoCategory, boolean], result: AlgoPiece } | 
        { key: "algoPieces.save", input: Array<AlgoPiece>, result: Array<AlgoPiece> } | 
        { key: "loadouts.save", input: Array<Loadout>, result: Array<Loadout> } | 
        { key: "slots.save", input: Array<Slot>, result: Array<Slot> } | 
        { key: "unit.delete", input: string, result: Unit } | 
        { key: "unit.new", input: [string, Class], result: Unit } | 
        { key: "unitSkills.save", input: Array<UnitSkill>, result: Array<UnitSkill> } | 
        { key: "units.save", input: Array<Unit>, result: Array<Unit> },
    subscriptions: never
};

export type AlgoCategory = "Offense" | "Stability" | "Special"

export type AlgoMainStat = "Hashrate" | "HashratePercent" | "Atk" | "AtkPercent" | "Health" | "HealthPercent" | "Haste" | "PhysPen" | "PhysPenPercent" | "OperandPen" | "OperandPenPercent" | "CritRate" | "CritDmg" | "DamageInc" | "Dodge" | "HealInc" | "Def" | "DefPercent" | "OperandDef" | "OperandDefPercent" | "PostBattleRegen"

export interface AlgoPiece { id: string, category: string, name: string, stat: string, loadoutId: string | null }

export type Algorithm = "LowerLimit" | "Feedforward" | "Deduction" | "Progression" | "DataRepair" | "MLRMatrix" | "Stack" | "LimitValue" | "Encapsulate" | "Iteration" | "Perception" | "Overflow" | "Rationality" | "Connection" | "Convolution" | "Reflection" | "Resolve" | "Inspiration" | "LoopGain" | "SVM" | "Paradigm" | "DeltaV" | "Cluster" | "Stratagem" | "Exploit"

export type Class = "Guard" | "Medic" | "Sniper" | "Specialist" | "Warrior"

export interface Loadout { id: string, level: number, neural: string, frags: number | null, loadoutType: string, unitId: string }

export type LoadoutType = "Current" | "Goal"

export interface Slot { id: string, placement: string, value: boolean, algoPieceId: string }

export interface Unit { id: string, name: string, class: string }

export interface UnitSkill { id: string, auto: number, passive: number, loadoutId: string }
